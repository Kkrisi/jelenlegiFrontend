import React, { useRef, useState } from "react";
import '../App.css';
import { relocateFiles } from "../api/relocateFiles";
import { deletePdfs } from "../api/deletePdfs";
import { myAxios } from "../api/axios";
import { getEmails } from "../api/getEmails";
import { Modal } from 'react-bootstrap';
import useAuthContext from "../contexts/AuthContext";



export default function EmailSend() {


  const fileInputRef = useRef(null);
  const [fileCount,setFileCount] = useState(0);
  const [selectedFiles, setSelectedFiles] = useState([]);   // ez FileList objektum, nem pedig t√∂mb
  const [relocatedFileCount, setRelocatedFileCount] = useState(0);
  const [getEmailsCount, setGetEmailsCount] = useState(0);

  const [showModal, setShowModal] = useState(false);
  const [isSaving, setIsSaving] = useState(false);










  const handleButtonClick = () => {
    fileInputRef.current.value = "";  // t√∂r√∂lj√ºk a kor√°bbi f√°jlokat
    fileInputRef.current.click();   // f√°jlv√°laszt√≥ megnyit√°sa
  }


  const handleFileChange = (event) => {
    const files = event.target.files;
    setSelectedFiles(files);
    setFileCount(files.length);
    console.log(`${files.length} f√°jl lett kiv√°lasztva.`);
  }





  // -------------------------------------------- F√°jl √°thelyez√©s kezdete -----------------------------------------
  const handleMoveFiles = async () => {
    if (selectedFiles.length > 0) {
      // f√°jlok egyes√©vel k√ºld√©se
      for (const file of selectedFiles) {
        console.log("F√°jl a k√©r√©sben:", file.name);
  
        try {
            setIsSaving(true);
            setShowModal(true);
          await relocateFiles(file);
          console.log("F√°jl sikeresen elk√ºldve!");
          setRelocatedFileCount(prevCount => prevCount + 1);
            setIsSaving(false);
            setShowModal(false);
        } catch (error) {
          console.error("Hiba a f√°jl √°thelyez√©sekor:", error);
            setIsSaving(false);
            setShowModal(false);
        }
      }
    } else { 
      console.log("Nincs kiv√°lasztott f√°jl.");
    }
  };
  // -------------------------------------------- F√°jl √°thelyez√©s v√©ge --------------------------------------------

  
  






    // -------------------------------------------- Hozz√°tartoz√≥ email keres√©s kezdete -------------------------------
    const handleAttachEmail = async () => {

      // 1. A kiv√°lasztott f√°jlokat t√∂mbb√© alak√≠tjuk
      const fileDetails = Array.from(selectedFiles)  // √°talak√≠tjuk a FileList-t egy t√∂mbb√©
      .map(file => {
        const kod = feldolgozFajlNev(file);
        return {kod, fileName: file.name};
      })
      .filter(file => file.kod);  // csak azokat a f√°jlokat tartjuk meg, amiknek van k√≥dja


      if (fileDetails.length === 0) {
          console.warn("Nincs egyetlen k√≥d sem a kiv√°lasztott f√°jlokban.");
          return;
      }
      
      try {
          setIsSaving(true);
          setShowModal(true);
        await getEmails(fileDetails);
        //console.log("Sikeres email c√≠m megszerz√©s!");
        setGetEmailsCount(prevCount => prevCount + 1);
          setIsSaving(false);
          setShowModal(false);
      } catch (error) {
        console.error("Hiba az email c√≠m megszerz√©sekor:", error);
          setIsSaving(false);
          setShowModal(false);
      }
    };
    
    




    const feldolgozFajlNev = (file) => {
        const fileName = file.name;
        const feldolgozottFajl = fileName.split(" ");
        let kod = "";
    
        for (let index = 0; index < feldolgozottFajl.length; index++) {
            if (feldolgozottFajl[index].includes("(")) {
                kod = feldolgozottFajl[index].replace("(", "").replace(")", "");
                break;  /// ha megvan a kod akkor nem megyunk tovabb
            }
        }
    
        return kod;
    };
    // -------------------------------------------- Hozz√°tartoz√≥ email keres√©s v√©ge ------------------------------------

    
    






  // -------------------------------------------- Email k√ºld√©se kezdete ------------------------------------------------
  const handleSendEmails = async () => {
      try {
          setIsSaving(true);
          setShowModal(true);
        const response = await myAxios.post("/api/send-email");
        console.log("Email k√ºld√©s eredm√©nye:", response.data);
          setIsSaving(false);
          setShowModal(false);
    } catch (error) {
        console.error("Hiba t√∂rt√©nt az email k√ºld√©sekor:", error);
        alert("Hiba t√∂rt√©nt az e-mailek k√ºld√©sekor.");
          setIsSaving(false);
          setShowModal(false);
    }
  };
  // -------------------------------------------- Email k√ºld√©se v√©ge ---------------------------------------------------







  // -------------------------------------------- Elt√°rolt Pdfk t√∂rl√©se kezdete -----------------------------------------
  const handleRemovePdfs = async () => {
      try {
          setIsSaving(true);
          setShowModal(true);
        await deletePdfs();
        console.log('Pdf f√°jlok sikeresen t√∂r√∂lve!');
          setIsSaving(false);
          setShowModal(false);
      } catch (error) {
        console.error("Hiba t√∂rl√©skor:", error);
          setIsSaving(false);
          setShowModal(false);
      }
  };
  // -------------------------------------------- Elt√°rolt Pdfk t√∂rl√©se v√©ge --------------------------------------------






  return (
    <div className="emailsendpage">

      <main>

        <article>

          <h1>Emailk√ºld≈ë</h1>

          <div>

            {/*<button type="button" id="fajlkivalasztas" onClick={() => { handleButtonClick(); showPopup(); }} >F√°jl kiv√°laszt√°sa</button>*/}
            <button type="button" id="fajlkivalasztas" onClick={handleButtonClick} >F√°jl kiv√°laszt√°sa</button>
              <input type="file"
              ref={fileInputRef}
              style={{ display: "none" }}
              accept="application/pdf"
              multiple
              onChange={handleFileChange} />

            <button type="button" id="athelyezes" onClick={handleMoveFiles} >√Åthelyez√©s</button>

            <button type="button" id="kuldes" onClick={handleAttachEmail} >K√ºld√©s /email p√°rt keres</button>
            <br />

            <button type="button" id="emailSend" onClick={handleSendEmails} >Email k√ºld√©se</button>

            <br />
            <button type="button" id="pdftorles" onClick={handleRemovePdfs}>Pdf-ek t√∂rl√©se</button>

          </div>

          <br />


          <div>
            <p>F√°jl kiv√°laszt√°sa: </p>
                <p className="megjelenoAdatok" id="fajlkivalasztasGomb">
                  {fileCount > 0 ? `${fileCount} f√°jlt sikeresen kiv√°lasztottunk ‚úÖ` : "Nincs f√°jl kiv√°lasztva"}
                </p>

            <p>√Åthelyez√©s: </p>
                <p className="megjelenoAdatok" id="athelyezesGomb">
                  {selectedFiles > 0 && relocatedFileCount === selectedFiles.length
                      ? `${relocatedFileCount} f√°jlt sikeresen √°thelyezt√ºnk ‚úÖ`
                      : relocatedFileCount > 0
                      ? `${relocatedFileCount} f√°jl √°thelyezve`
                      : ""}
                </p>


            <p>Emailc√≠m megszerz√©se: </p>
              <p className="megjelenoAdatok" id="kuldesGomb">
                  {selectedFiles.length > 0 && getEmailsCount === 1 ? `Email c√≠m sikeresen megszerezve ‚úÖ` : ""}
              </p>


            {/*<p>Json f√°jl √°llapota: </p>
            <p className="megjelenoAdatok" id="jsonAllapotGomb"></p>*/}
            <p>Emailek √°llapota: </p>
            <p className="megjelenoAdatok" id="emailAllapotGomb"></p>


            <p>T√∂r√∂lt pdf-ek: </p>
            <p className="megjelenoAdatok" id="toroltpdfekGomb"></p>
          </div>
          <br />
        </article>
      </main>
      

      <Modal show={showModal} onHide={() => setShowModal(false)}>
          <Modal.Header closeButton>
            <Modal.Title>Dolgozunk rajta... üöÄ</Modal.Title>
          </Modal.Header>
          <Modal.Body>
            <p>Az adatok feldolgoz√°sa folyamatban van. K√©rlek, v√°rj egy pillanatot.</p>
          </Modal.Body>
      </Modal>


    </div>
  );
}


