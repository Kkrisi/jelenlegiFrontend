import React from 'react'
import axios from "axios";
import Cookies from "js-cookie";




// L√©trehozunk egy √∫j Axios p√©ld√°nyt a create met√≥dus seg√≠ts√©g√©vel.
export const myAxios = axios.create({
  baseURL: 'http://localhost:8000',
  // Be√°ll√≠tjuk, hogy a k√©r√©sek azonos√≠t√°sa cookie-k seg√≠ts√©g√©vel t√∂rt√©nik.
  withCredentials: true,
});



/*
// üîπ REQUEST INTERCEPTOR: Tokenek hozz√°ad√°sa minden k√©r√©shez
myAxios.interceptors.request.use(
  (config) => {
    // CSRF token lek√©r√©se a cookie-b√≥l
    const csrfToken = document.cookie
      .split("; ")
      .find((row) => row.startsWith("XSRF-TOKEN="))
      ?.split("=")[1];

    if (csrfToken) {
      config.headers["X-XSRF-TOKEN"] = decodeURIComponent(csrfToken);
    }

    // üîπ Hozz√°adjuk az Authorization fejl√©cet, ha van t√°rolt authToken
    const authToken = Cookies.get("authToken");
    if (authToken) {
      config.headers.Authorization = `Bearer ${authToken}`;
    }

    return config;
  },
  (error) => {
    console.error("Request interceptor error:", error);
    return Promise.reject(error);
  }
);

// üîπ RESPONSE INTERCEPTOR: 401-es v√°lasz eset√©n automatikus kijelentkeztet√©s
myAxios.interceptors.response.use(
  (response) => response,
  (error) => {
    if (error.response && error.response.status === 401) {
      console.warn("Hiteles√≠t√©si hiba! Automatikus kijelentkeztet√©s...");
      Cookies.remove("authToken"); // Token t√∂rl√©se
      window.location.href = "/bejelentkezes"; // √Åtir√°ny√≠t√°s a bejelentkez√©si oldalra
    }
    return Promise.reject(error);
  }
);*/








myAxios.interceptors.request.use(
  (config) => {
    const token = document.cookie
      .split("; ")
      .find((row) => row.startsWith("XSRF-TOKEN="))
      ?.split("=")[1];
    if (token) {
      config.headers["X-XSRF-TOKEN"] = decodeURIComponent(token);
    }
    return config;
  },
  (error) => {
    // Hiba eset√©n √≠rjuk ki a hib√°t, vagy v√©gezz√ºnk hibakezel√©st
    console.error("Request interceptor error:", error);
    return Promise.reject(error);
  }
);
